# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type Kandang {
  id: ID!
  name: String
  periodes(where: PeriodeWhereInput! = {}, orderBy: [PeriodeOrderByInput!]! = [], take: Int, skip: Int! = 0): [Periode!]
  periodesCount(where: PeriodeWhereInput! = {}): Int
}

input KandangWhereUniqueInput {
  id: ID
}

input KandangWhereInput {
  AND: [KandangWhereInput!]
  OR: [KandangWhereInput!]
  NOT: [KandangWhereInput!]
  id: IDFilter
  name: StringFilter
  periodes: PeriodeManyRelationFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input PeriodeManyRelationFilter {
  every: PeriodeWhereInput
  some: PeriodeWhereInput
  none: PeriodeWhereInput
}

input KandangOrderByInput {
  id: OrderDirection
  name: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input KandangUpdateInput {
  name: String
  periodes: PeriodeRelateToManyForUpdateInput
}

input PeriodeRelateToManyForUpdateInput {
  disconnect: [PeriodeWhereUniqueInput!]
  set: [PeriodeWhereUniqueInput!]
  create: [PeriodeCreateInput!]
  connect: [PeriodeWhereUniqueInput!]
}

input KandangUpdateArgs {
  where: KandangWhereUniqueInput!
  data: KandangUpdateInput!
}

input KandangCreateInput {
  name: String
  periodes: PeriodeRelateToManyForCreateInput
}

input PeriodeRelateToManyForCreateInput {
  create: [PeriodeCreateInput!]
  connect: [PeriodeWhereUniqueInput!]
}

type Periode {
  id: ID!
  number: Int
  startAt: CalendarDay
  kandang: Kandang
}

scalar CalendarDay @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input PeriodeWhereUniqueInput {
  id: ID
}

input PeriodeWhereInput {
  AND: [PeriodeWhereInput!]
  OR: [PeriodeWhereInput!]
  NOT: [PeriodeWhereInput!]
  id: IDFilter
  number: IntFilter
  startAt: CalendarDayFilter
  kandang: KandangWhereInput
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilter
}

input CalendarDayFilter {
  equals: CalendarDay
  in: [CalendarDay!]
  notIn: [CalendarDay!]
  lt: CalendarDay
  lte: CalendarDay
  gt: CalendarDay
  gte: CalendarDay
  not: CalendarDayFilter
}

input PeriodeOrderByInput {
  id: OrderDirection
  number: OrderDirection
  startAt: OrderDirection
}

input PeriodeUpdateInput {
  number: Int
  startAt: CalendarDay
  kandang: KandangRelateToOneForUpdateInput
}

input KandangRelateToOneForUpdateInput {
  create: KandangCreateInput
  connect: KandangWhereUniqueInput
  disconnect: Boolean
}

input PeriodeUpdateArgs {
  where: PeriodeWhereUniqueInput!
  data: PeriodeUpdateInput!
}

input PeriodeCreateInput {
  number: Int
  startAt: CalendarDay!
  kandang: KandangRelateToOneForCreateInput
}

input KandangRelateToOneForCreateInput {
  create: KandangCreateInput
  connect: KandangWhereUniqueInput
}

type User {
  id: ID!
  name: String
  email: String
  password: PasswordState
  createdAt: DateTime
}

type PasswordState {
  isSet: Boolean!
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
  createdAt: DateTimeNullableFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
  createdAt: OrderDirection
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  createdAt: DateTime
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  email: String
  password: String
  createdAt: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createKandang(data: KandangCreateInput!): Kandang
  createKandangs(data: [KandangCreateInput!]!): [Kandang]
  updateKandang(where: KandangWhereUniqueInput!, data: KandangUpdateInput!): Kandang
  updateKandangs(data: [KandangUpdateArgs!]!): [Kandang]
  deleteKandang(where: KandangWhereUniqueInput!): Kandang
  deleteKandangs(where: [KandangWhereUniqueInput!]!): [Kandang]
  createPeriode(data: PeriodeCreateInput!): Periode
  createPeriodes(data: [PeriodeCreateInput!]!): [Periode]
  updatePeriode(where: PeriodeWhereUniqueInput!, data: PeriodeUpdateInput!): Periode
  updatePeriodes(data: [PeriodeUpdateArgs!]!): [Periode]
  deletePeriode(where: PeriodeWhereUniqueInput!): Periode
  deletePeriodes(where: [PeriodeWhereUniqueInput!]!): [Periode]
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type Query {
  kandangs(where: KandangWhereInput! = {}, orderBy: [KandangOrderByInput!]! = [], take: Int, skip: Int! = 0): [Kandang!]
  kandang(where: KandangWhereUniqueInput!): Kandang
  kandangsCount(where: KandangWhereInput! = {}): Int
  periodes(where: PeriodeWhereInput! = {}, orderBy: [PeriodeOrderByInput!]! = [], take: Int, skip: Int! = 0): [Periode!]
  periode(where: PeriodeWhereUniqueInput!): Periode
  periodesCount(where: PeriodeWhereInput! = {}): Int
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
